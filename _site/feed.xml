<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-05-03T15:27:05+08:00</updated><id>http://localhost:4000/</id><title type="html">董仁文的博客</title><subtitle>董仁文的个人博客</subtitle><author><name>Renwen Dong</name></author><entry><title type="html">MacOS允许任何来源应用</title><link href="http://localhost:4000/2018/05/03/spctl-master-disable/" rel="alternate" type="text/html" title="MacOS允许任何来源应用" /><published>2018-05-03T00:00:00+08:00</published><updated>2018-05-03T00:00:00+08:00</updated><id>http://localhost:4000/2018/05/03/spctl-master-disable</id><content type="html" xml:base="http://localhost:4000/2018/05/03/spctl-master-disable/">&lt;p&gt;在MacOS中，在网络上下载的第三方软件，安装的时候可能会出现文件已损坏的提示，导致软件无法使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解决办法&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;系统偏好设置 -&amp;gt; 安全性与隐私 -&amp;gt; 通用 -&amp;gt; 选择&quot;任何来源&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;如果没有 &lt;code class=&quot;highlighter-rouge&quot;&gt;任何来源&lt;/code&gt; 选项&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;显示&lt;code class=&quot;highlighter-rouge&quot;&gt;任何来源&lt;/code&gt;选项
    &lt;ol&gt;
      &lt;li&gt;重新启动计算机，开机时按住 &lt;code class=&quot;highlighter-rouge&quot;&gt;Command + R&lt;/code&gt; 进入恢复模式&lt;/li&gt;
      &lt;li&gt;在恢复模式中打开命令行工具&lt;/li&gt;
      &lt;li&gt;执行命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo spctl --master-disable&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;不显示任何来源执行命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo spctl --master-enable&lt;/code&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Renwen Dong</name></author><summary type="html">在MacOS中，在网络上下载的第三方软件，安装的时候可能会出现文件已损坏的提示，导致软件无法使用。</summary></entry><entry><title type="html">SUMO的简单操作</title><link href="http://localhost:4000/2018/04/13/SUMO-simple-operation/" rel="alternate" type="text/html" title="SUMO的简单操作" /><published>2018-04-13T00:00:00+08:00</published><updated>2018-04-13T00:00:00+08:00</updated><id>http://localhost:4000/2018/04/13/SUMO-simple-operation</id><content type="html" xml:base="http://localhost:4000/2018/04/13/SUMO-simple-operation/">&lt;h2 id=&quot;使用sumo命令行应用&quot;&gt;使用SUMO命令行应用&lt;/h2&gt;

&lt;p&gt;许多SUMO包里的程序应用是命令行工具。只有SUMO-GUI不是。关于命令行，可以阅读&lt;a href=&quot;http://www.sumo.dlr.de/userdoc/Basics/Basic_Computer_Skills.html#Running_Programs_from_the_Command_Line&quot;&gt;基本计算机技巧&lt;/a&gt;页面。&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;以下内容介绍了SUMO匹配程序的一些特点。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;从命令行使用SUMO的应用
&lt;br /&gt;SUMO应用程序是普通的应用程序。在&lt;code class=&quot;highlighter-rouge&quot;&gt;SUMO Command Line&lt;/code&gt;中输入应用名称就能够运行它们。
&lt;br /&gt;比如NETGENRATE被调用通过
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netgenerate.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;这样就启动了程序。因为并没有给它任何的参数，所以程序输出的时它自己的信息：&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SUMO netgenerate Version 0.32.0
Build features: x64 Release PROJ GDAL GUI
Copyright (C) 2001-2017 German Aerospace Center (DLR) and others; http://sumo.dlr.de
License EPLv2: Eclipse Public License Version 2 &amp;lt;https://eclipse.org/legal/epl-v20.html&amp;gt;
Use --help to get the list of options.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选项
&lt;br /&gt;每个应用程序都有一组选项，该选项定义哪些文件应被处理或生成，或哪些定义了应用程序的行为。通常情况下，一个应用程序需要至少两个参数-一个输入文件和一个输出文件-但几乎总是更多的参数用于细粒度的控制（fine-grained control）。每个应用程序的选项都在应用程序的描述中描述。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;命令行的选项设置
&lt;br /&gt;有两种选项：
    &lt;ul&gt;
      &lt;li&gt;布尔选项。不需要一个参数，如果选项存在则设置为True（此类选项只能设置“True”或“False”）&lt;/li&gt;
      &lt;li&gt;需要一个参数的选项。在命令行上设置一个参数，由两个部分组成：选项名称和选项的值。
 &lt;br /&gt;例如，如果想要模拟加载特定的道路网络，“mynet.net.XML”，以下可以写：
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; --net mynet.net.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt;在最前面，指示选项的常明诚紧跟其后。空格后是选项的值。也可以用&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;代替空白格。&lt;/p&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; --net=mynet.net.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;很多时候可以缩写。比如&lt;code class=&quot;highlighter-rouge&quot;&gt;—net&lt;/code&gt;可以缩写为&lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt;，如：&lt;/p&gt;
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; -n mynet.net.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;这个例子和前面两个例子一样效果（注意缩写后变成一个&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;）。并且注意并不是所有的缩写具有相同的意义。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;选项值的类型
&lt;br /&gt;SUMO程序知道哪一种类型的值是他们所期待的。比如，NETGENERATE允许设置默认的车道数，当然必须是整数。如果给它一个string类型或者其他的类型数据，程序就会报错。
&lt;br /&gt;一个比较特别的类型就是列表（lists）。比如，当需要给出多个文件，文件之间必须用逗号隔开。这个方式同样应用于其他的数值类型，比如整数或者浮点数。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;配置文件&quot;&gt;配置文件&lt;/h2&gt;
&lt;p&gt;因为选项列表可能会很长，配置文件被引入。可以设置一个配置文件，其中包含运行应用程序的所有参数。
&lt;br /&gt;配置文件是一个XML文件，有一个名为“configuration”的根元素。选项被写为元素名称，在属性value中存储值。命令行语句&lt;code class=&quot;highlighter-rouge&quot;&gt;—net-file test.net.xml&lt;/code&gt;可以改写为&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;net-filevalue=&quot;test.net.xml&quot;&amp;gt;&lt;/code&gt;。对于布尔值，真值对应的是：&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;on&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;；假值对应的是：&lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;off&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;no&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;；
&lt;br /&gt;举例说明，配置文件(&lt;code class=&quot;highlighter-rouge&quot;&gt;test.sumocfg&lt;/code&gt;)样式如下：&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;net-file&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test.net.xml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;route-files&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test.rou.xml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;additional-files&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test.add.xml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/input&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;“input”部分只是文件目的，并没有功能意义。
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;n&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test.net.xml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;r&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test.rou.xml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;v=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test.add.xml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;由SUMO程序执行调用，应该为：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sumo.exe -c test.sumocfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;使用选项&lt;code class=&quot;highlighter-rouge&quot;&gt;—configuration-file&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt;直接运行配置文件，在命令行中也可以直接省去&lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sumo.exe test.sumocfg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;配置文件的命名约定
&lt;br /&gt;根据目标应用程序，配置文件有不同的扩展。强烈建议遵守命名公约。针对使用&lt;a href=&quot;http://www.sumo.dlr.de/userdoc/SUMO-GUI.html&quot;&gt;SUMO-GUI&lt;/a&gt;模拟配置的更是必须遵守，&lt;a href=&quot;http://www.sumo.dlr.de/userdoc/SUMO-GUI.html&quot;&gt;SUMO-GUI&lt;/a&gt;只能够读取命名为&lt;code class=&quot;highlighter-rouge&quot;&gt;*.sumocfg&lt;/code&gt;模拟配置文件。
&lt;br /&gt;在页面&lt;a href=&quot;http://www.sumo.dlr.de/userdoc/Other/File_Extensions.html&quot;&gt;used file extensions&lt;/a&gt;中可以找到所有配置扩展的约定&lt;/li&gt;
  &lt;li&gt;配置文件vs命令行参数
除了配置文件，更多的命令行参数是通过命令行赋值。如果一个参数被设置在指定的配置文件中，同事也在命令行上设置，命令行上的值可以被使用。如果想禁用配置文件中启用的布尔选项，需要显式地在命令行上给出False的值，就像&lt;code class=&quot;highlighter-rouge&quot;&gt;--verbose false&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;生成配置文件、模板和模式（schemata）
&lt;br /&gt;SUMO程序允许生成配置文件模板，可以保存一个空的配置文件（配置文件模板），通过命令&lt;code class=&quot;highlighter-rouge&quot;&gt;--save-template &amp;lt;FILE&amp;gt;&lt;/code&gt;实现。在这种情况下，配置只包含填充了它们的默认值的参数。
&lt;br /&gt;想要保存包含当前设置的配置文件，可以强制使用命令&lt;code class=&quot;highlighter-rouge&quot;&gt;--save-configuration &amp;lt;FILE&amp;gt;&lt;/code&gt;
&lt;br /&gt;最后但并非最不重要的是，可以生成一个XML模式（使用选项&lt;code class=&quot;highlighter-rouge&quot;&gt;--save-schema &amp;lt;FILE&amp;gt;&lt;/code&gt;）来验证配置文件。 对于SUMO应用程序，此架构应与&lt;code class=&quot;highlighter-rouge&quot;&gt;http://sumo-sim.org/xsd/sumoConfiguration.xsd&lt;/code&gt;（分别针对其他可执行文件）中的相同。&lt;font color=&quot;red&quot;&gt;请注意，模式（schema）比SUMO选项解析器更严格，因为它不仅验证了上述详细版本。&lt;/font&gt;
&lt;br /&gt;在任何情况下，如果要进一步的参数的信息，也可以通过选项&lt;code class=&quot;highlighter-rouge&quot;&gt;--save-commented&lt;/code&gt;。然后，对每个参数产生一些进一步的信息。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;常用选项&quot;&gt;常用选项&lt;/h2&gt;
&lt;p&gt;SUMO程序共享几个选项。在下面会详细讲解。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;报告选项（Reporting Options）&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Option&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-v &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--verbose &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;输出详细信息；默认值为：false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--print-options &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;在处理前打印选项值；默认值为：false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-? &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--help &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;打印帮助信息到当前屏幕；默认值为：false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-V &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--version &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;打印版本信息；默认值为：false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-X &amp;lt;STRING&amp;gt;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--xml-validation &amp;lt;STRING&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;设置XML输入的模式验证方案（”never”，”auto”或”always”）; 默认值为：”auto”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--xml-validation.net &amp;lt;STRING&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;设置SUMO网络输入的模式验证方案（”never”，”auto”或”always”）; 默认值为：”auto”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-W &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--no-warnings &amp;lt;BOOL&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;禁用警告输出；默认值为：false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-l &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--log &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;将所有Log信息写入文件(意味着冗长)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--message-log &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;将所有非错误Log信息写入到文件(意味着冗长)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--error-log &amp;lt;FILE&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;将Log中的所有警告和错误信息写入到文件&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--log&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;--message-log&lt;/code&gt;只能将正确的Log信息输出到文件，且不会输出到终端屏幕上，除非同时使用&lt;code class=&quot;highlighter-rouge&quot;&gt;--verbose&lt;/code&gt;参数，需要注意的时，这是错误的Log信息只是输出到了终端屏幕上，而不会被输出到文件之中，除非指定错误Log输出的Log文件。
&lt;br /&gt; &lt;a href=&quot;http://www.sumo.dlr.de/userdoc/XMLValidation.html&quot;&gt;XML validation&lt;/a&gt;选项会在XML分析程序中开启&lt;a href=&quot;https://xerces.apache.org/xerces-c/schema-3.html&quot;&gt;XML schema processing&lt;/a&gt;，这会对输入进行基本的验证，初学者来说，特别强烈推荐使用此选项，因为它会很容易的就发现输入中的拼写错误，否则可能会被忽略。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;随机数选项（Random Number Options）
&lt;br /&gt;这些选项配置用来确定随机数生成器的种子。相同的种子可以产生相同序列的随机数字。
&lt;br /&gt;默认情况下，种子是一个硬编码的固定值。所以，只要所有配置设置保持不变，重复模拟运行的输出将是相同的。要更改此设置，请使用以下选项之一。&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Option&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--seed &amp;lt;INT&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;为随机数发生器设置一个特定的种子。 通过使用不同的值，可以得到不同的随机数，但仍可重复的模拟运行。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--random&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;让SUMO选择一颗随机数种子。如果&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/urandom&lt;/code&gt;可用，则基于此导出种子，如果不可用，则根据当前的系统时间导出种子。此选项的优先级高于&lt;code class=&quot;highlighter-rouge&quot;&gt;--seed &amp;lt;INT&amp;gt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;生成和读取文件&quot;&gt;生成和读取文件&lt;/h2&gt;
&lt;p&gt;几乎每个来自SUMO软件包的工具读取或生成的文件都是用XML编写的。在开始使用SUMO之前，应该熟悉&lt;a href=&quot;https://en.wikipedia.org/wiki/XML&quot;&gt;XML&lt;/a&gt;。
&lt;br /&gt;SUMO允许你导入不同来源的文件不仅仅是SUMO本地文件（road network descriptions, route and/or demand descriptions,infrastructure descriptions, etc）。
&lt;br /&gt;对于SUMO使用的某些文件类型，有xsd (XML Schema Definition)。关于文件类型的问题请阅读页面（&lt;a href=&quot;http://www.sumo.dlr.de/userdoc/Other/File_Extensions.html&quot;&gt;file extensions&lt;/a&gt;）。&lt;/p&gt;

&lt;h2 id=&quot;写入文件&quot;&gt;写入文件&lt;/h2&gt;
&lt;p&gt;有几个选项需要一个文件名作为参数写入。 当在命令行给出时，给定的路径被假定为相对于当前工作目录。 当在配置文件中给出时，文件路径被认为是相对于配置文件的路径。 绝对路径当然也是允许的。
&lt;br /&gt;通常，具有相同名称的现有文件将被覆盖而不会有警告。 该目录必须存在，输出文件才会被写入。
&lt;br /&gt;
&lt;br /&gt;除了写入文件，还有一些特殊符号可以写入：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;写入空设备（不输出）：使用&lt;code class=&quot;highlighter-rouge&quot;&gt;NUL&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/null&lt;/code&gt;作为文件名（两个符号均不依赖于工作平台）&lt;/li&gt;
  &lt;li&gt;写入套接字（socket）：使用&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;HOST&amp;gt;:&amp;lt;PORT&amp;gt;&lt;/code&gt;作为文件名&lt;/li&gt;
  &lt;li&gt;写入stdout（在命令行上打印）：使用&lt;code class=&quot;highlighter-rouge&quot;&gt;stdout&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt; - &lt;/code&gt;作为文件名&lt;/li&gt;
  &lt;li&gt;写入stderr：使用&lt;code class=&quot;highlighter-rouge&quot;&gt;stderr&lt;/code&gt;作为文件名&lt;/li&gt;
  &lt;li&gt;文件名中的特殊字符串&lt;code class=&quot;highlighter-rouge&quot;&gt;TIME&lt;/code&gt;将被替换为应用程序的开始时间&lt;/li&gt;
&lt;/ul&gt;

&lt;font color=&quot;red&quot;&gt;目前无法从sockets或stdin读取输入。&lt;/font&gt;
&lt;p&gt;&lt;br /&gt;作为修改输出文件名的简单方法，提供了选项&lt;code class=&quot;highlighter-rouge&quot;&gt;--output-prefix &amp;lt;STRING&amp;gt;&lt;/code&gt;。给定的字符串将被添加到应用程序编写的所有文件中。
&lt;br /&gt;&lt;font color=&quot;red&quot;&gt;注意：多样数据源允许有相同的输出文件。&lt;/font&gt;&lt;/p&gt;

&lt;h2 id=&quot;从命令行使用python工具&quot;&gt;从命令行使用Python工具&lt;/h2&gt;
&lt;p&gt;很多SUMO工具类程序（在&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;SUMO_HOME&amp;gt;/tools&lt;/code&gt;文件夹中）都是用python编程语言编写的。要使用它们，必须在您的计算机上安装python 2.7。然后你需要确保设置了环境变量&lt;code class=&quot;highlighter-rouge&quot;&gt;SUMO_HOME&lt;/code&gt;。最简单的方法是使用&lt;code class=&quot;highlighter-rouge&quot;&gt;start-command-line.bat&lt;/code&gt;打开命令行窗口。
&lt;br /&gt;此外需要确认计算机在哪里可以找到Python工具，最简单(但有点麻烦)的方法就是使用完整路径运行该工具。或者可以将工具所在的目录添加到&lt;code class=&quot;highlighter-rouge&quot;&gt;PATH&lt;/code&gt;中（设置环境变量）。&lt;/p&gt;</content><author><name>Renwen Dong</name></author><summary type="html">使用SUMO命令行应用</summary></entry><entry><title type="html">Markdown常用语法</title><link href="http://localhost:4000/2018/04/12/Markdown-syntax/" rel="alternate" type="text/html" title="Markdown常用语法" /><published>2018-04-12T00:00:00+08:00</published><updated>2018-04-12T00:00:00+08:00</updated><id>http://localhost:4000/2018/04/12/Markdown-syntax</id><content type="html" xml:base="http://localhost:4000/2018/04/12/Markdown-syntax/">&lt;p&gt;&lt;strong&gt;注意：Markdown使用&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;等符号来标记， 符号后面必须跟上 至少1个 空格才有效！&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;标题&quot;&gt;标题&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;标记&lt;/strong&gt;
在 &lt;strong&gt;标题开头&lt;/strong&gt; 加上1~6个#，依次代表一级标题、二级标题….六级标题&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 一级标题
## 二级标题
### 三级标题
##### 四级标题
###### 五级标题
###### 六级标题
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;标记&lt;/strong&gt;&lt;br /&gt;
在 &lt;strong&gt;标题底下&lt;/strong&gt; 加上任意个&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;代表一级标题，&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;代表二级标题&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gu&quot;&gt;一级标题
======
&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;二级标题
----------
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;列表&quot;&gt;列表&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;无序列表使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;作为列表标记：&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Red
- Green
- Blue

* Red
* Green
* Blue

+ Red
+ Green
+ Blue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;有序列表则使用数字加英文句点&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;来表示：&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Red
2. Green
3. Blue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;引用&quot;&gt;引用&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;引用以&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt;来表示，引用中支持多级引用、标题、列表、代码块、分割线等常规语法。&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; 一级引用
&amp;gt; &amp;gt; 二级引用
&amp;gt; &amp;gt; &amp;gt; 三级引用

&amp;gt; 这是一段引用    //在`&amp;gt;`后面有 1 个空格
&amp;gt;
&amp;gt;     这是引用的代码块形式    //在`&amp;gt;`后面有 5 个空格
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;强调&quot;&gt;强调&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;两个&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;代表加粗，一个&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;代表斜体，&lt;code class=&quot;highlighter-rouge&quot;&gt;~~&lt;/code&gt;代表删除。&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;**加粗文本** 或者 __加粗文本__

*斜体文本*  或者_斜体文本_

~~删除文本~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;图片与链接&quot;&gt;图片与链接&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;图片与链接的语法很像，区别在一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; 号。二者格式：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;图片：![]()    ![图片文本(可忽略)](图片地址)

链接：[]()     [链接文本](链接地址)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;链接又分为行内式、参考式和 自动链接：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这是行内式链接：[ConnorLin's Blog](http://connorlin.github.io)。
这是参考式链接：[ConnorLin's Blog][url]，其中url为链接标记，可置于文中任意位置。
[url]: http://connorlin.github.io/ &quot;ConnorLin's Blog&quot;
链接标记格式为：[链接标记文本]:  链接地址  链接title(可忽略)
这是自动链接：直接使用`&amp;lt;&amp;gt;`括起来&amp;lt;http://connorlin.github.io&amp;gt;
这是图片：![][avatar]
[avatar]: https://connorlin.github.io/images/avatar.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;表格&quot;&gt;表格&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;居左：&lt;code class=&quot;highlighter-rouge&quot;&gt;:----&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;居中：&lt;code class=&quot;highlighter-rouge&quot;&gt;:----:&lt;/code&gt;或&lt;code class=&quot;highlighter-rouge&quot;&gt;-----&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;居右：&lt;code class=&quot;highlighter-rouge&quot;&gt;----:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|标题|标题|标题|
|:---|:---:|---:|
|居左测试文本|居中测试文本|居右测试文本|
|居左测试文本1|居中测试文本2|居右测试文本3|
|居左测试文本11|居中测试文本22|居右测试文本33|
|居左测试文本111|居中测试文本222|居右测试文本333|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;分隔线&quot;&gt;分隔线&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;在一行中用三个以上的&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;来建立一个分隔线，行内不能有其他东西。也可以在符号间插入空格。&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;***
---
___

* * *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;换行&quot;&gt;换行&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;在行尾添加两个空格加回车表示换行：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这是一行后面加两个空格  换行
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;脚注注解&quot;&gt;脚注(注解)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;[^]&lt;/code&gt;来定义脚注：&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;这是一个脚注的例子[^1]

[^1]: 这里是脚注
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Renwen Dong</name></author><summary type="html">注意：Markdown使用#、+、*等符号来标记， 符号后面必须跟上 至少1个 空格才有效！</summary></entry><entry><title type="html">关于SUMO</title><link href="http://localhost:4000/2018/04/12/About-SUMO/" rel="alternate" type="text/html" title="关于SUMO" /><published>2018-04-12T00:00:00+08:00</published><updated>2018-04-12T00:00:00+08:00</updated><id>http://localhost:4000/2018/04/12/About-SUMO</id><content type="html" xml:base="http://localhost:4000/2018/04/12/About-SUMO/">&lt;h2 id=&quot;简介&quot;&gt;简介&lt;/h2&gt;
&lt;p&gt;SUMO全称Simulation of Urban Mobility，是一个开源、微观、多模态交通仿真模拟软件。&lt;br /&gt;
它允许模拟一个给定的交通需求，其中包括一个车辆移动通过一个给定的道路网络。&lt;br /&gt;
仿真允许解决一个大的交通管理主题。&lt;br /&gt;
它是纯粹的微观：每个车辆的建模明确，有一个自己的路线，并单独通过网络。&lt;br /&gt;
在默认情况下模拟是确定性的，但引入随机性有不同的选择。&lt;/p&gt;

&lt;h2 id=&quot;特性&quot;&gt;特性&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;包括准备和进行交通仿真应用的全部应用（网络和路线导入，DUA，模拟）&lt;/li&gt;
  &lt;li&gt;模拟
    &lt;ul&gt;
      &lt;li&gt;空间连续和时间离散车辆运动&lt;/li&gt;
      &lt;li&gt;不同车辆类型&lt;/li&gt;
      &lt;li&gt;车道变换的多车道街道&lt;/li&gt;
      &lt;li&gt;不同的通行权规则，交通灯&lt;/li&gt;
      &lt;li&gt;一个快速的OpenGL图形用户界面&lt;/li&gt;
      &lt;li&gt;
        &lt;font color=&quot;red&quot;&gt;管理几个10000边（街道）的网络&lt;/font&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;font color=&quot;red&quot;&gt;执行速度快（高达100000的车辆更新/在1GHz的机器）&lt;/font&gt;
      &lt;/li&gt;
      &lt;li&gt;与其他应用程序在运行时的互操作性&lt;/li&gt;
      &lt;li&gt;网络范围，基于边缘，基于车辆和基于检测器的输出&lt;/li&gt;
      &lt;li&gt;支持基于人的跨模态的旅行&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;网络输入
    &lt;ul&gt;
      &lt;li&gt;支持VISUM, Vissim,Shapefiles, OSM, RoboCup, MATsim, OpenDRIVE, and XML-Descriptions；&lt;/li&gt;
      &lt;li&gt;丢失的值是通过启发式确定；&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;路由
    &lt;ul&gt;
      &lt;li&gt;微观路线-每辆车都有一个自己的路线；&lt;/li&gt;
      &lt;li&gt;不同用户动态分配算法；&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;可移植性高
    &lt;ul&gt;
      &lt;li&gt;标准C++库和portable库被应用；&lt;/li&gt;
      &lt;li&gt;Windows 和Linux分布的安装包都存在；&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;通过只使用XML数据的高互操作性&lt;/li&gt;
  &lt;li&gt;开源（GPL）&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;被使用的地方&quot;&gt;被使用的地方&lt;/h2&gt;
&lt;p&gt;自2001以来，SUMO已经被用在一些国家和国际研究项目背景。应用包括：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;交通灯的评价&lt;/li&gt;
  &lt;li&gt;路由选择和再路由&lt;/li&gt;
  &lt;li&gt;交通监控方法评价&lt;/li&gt;
  &lt;li&gt;车辆通信仿真&lt;/li&gt;
  &lt;li&gt;交通量预测&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;包含的应用&quot;&gt;包含的应用&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Application name&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Short description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SUMO&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;没有可视化的微观仿真；命令行应用&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SUMO-GUI&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;用图形用户界面的微观模拟&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;NETCONVERT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;网络导入和导出；读取不同格式的道路网络，并将它们转换为SUMO格式&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;NETEDIT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;一个图形化的网络编辑器。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;NETGENERATE&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;生成的SUMO仿真基本网络&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;DUAROUTER&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;输入不同类型的需求描述，计算最快的路由通过网络。执行DUA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;JTRROUTER&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;使用结转百分比（ junction turning percentages）计算路由&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;DFROUTER&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;从感应环测量（ induction loop measurements）计算路线&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;OD2TRIPS&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;分解OD矩阵（O/D-matrices ）为单个车辆轨迹（single vehicle trips）&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;POLYCONVERT&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;从不同的格式导入兴趣和多边形的点，转换他们到一种可被SUMO-GUI可视化的描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ACTIVITYGEN&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;根据模拟人口的流动意愿生成需求&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MESO&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;使用介观队列模型（mesoscopic queue-model）的模拟，比纯粹的微观模拟执行模拟高达100倍的速度。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MESO-GUI&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;具有图形用户界面的介观模拟。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Additional Tools&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;有一些任务，编写一个大的应用程序是没有必要的。这些工具可以覆盖不同的问题的几种解决方案。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;一些组织对于SUMO安装包进行了扩展并且提交了他们的代码，如果没有在release版本中包含，他们的贡献通常没有被频繁测试，或者过时了。包含以下程序，但是请注意他们并不是全部长久更新维持的：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Application name&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Short description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TraCI4J&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;一种java接口用于连接和扩展信息通过TraCI ，作者Enrico Gueli&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TraCI4Matlab&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;一种matlab接口用于连接和扩展信息通过TraCI ，作者Andres Acosta&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;TraaS&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;一种SOAP（webservice）接口用于连接和扩展信息通过TraCI ，作者Mario Krumnow&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Contributed/SUMO Traffic Modeler&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;过时了&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Renwen Dong</name></author><summary type="html">简介 SUMO全称Simulation of Urban Mobility，是一个开源、微观、多模态交通仿真模拟软件。 它允许模拟一个给定的交通需求，其中包括一个车辆移动通过一个给定的道路网络。 仿真允许解决一个大的交通管理主题。 它是纯粹的微观：每个车辆的建模明确，有一个自己的路线，并单独通过网络。 在默认情况下模拟是确定性的，但引入随机性有不同的选择。</summary></entry><entry><title type="html">SUMO的简单使用</title><link href="http://localhost:4000/2018/04/03/SUMO-Demo/" rel="alternate" type="text/html" title="SUMO的简单使用" /><published>2018-04-03T00:00:00+08:00</published><updated>2018-04-03T00:00:00+08:00</updated><id>http://localhost:4000/2018/04/03/SUMO-Demo</id><content type="html" xml:base="http://localhost:4000/2018/04/03/SUMO-Demo/">&lt;p&gt;&lt;em&gt;“Simulation of Urban MObility”, or “SUMO” for short, is an open source, microscopic, multi-modal traffic simulation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SUMO的安装：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;通过&lt;a href=&quot;http://www.sumo.dlr.de&quot;&gt;sumo官网&lt;/a&gt;下载&lt;/li&gt;
  &lt;li&gt;点击&lt;a href=&quot;http://www.dlr.de/ts/en/Portaldata/16/Resources/projekte/sumo/sumo-win64-0.32.0.msi&quot;&gt;SUMO for Windows&lt;/a&gt;下载&lt;/li&gt;
  &lt;li&gt;执行下载后的文件进行安装,假定安装目录为&lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Sumo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;执行SUMO：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;最简单的执行方式，不做具体内容说明&lt;/li&gt;
  &lt;li&gt;下载OSM地图文件，命名为&lt;code class=&quot;highlighter-rouge&quot;&gt;demo.osm&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;通过地图文件生成道路文件,在&lt;code class=&quot;highlighter-rouge&quot;&gt;SUMO Command Line&lt;/code&gt;中，切换到工作目录执行
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  C:\Sumo\bin\netconvert.exe --osm-files demo.osm -o demo.net.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;通过道路文件生成trips文件
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  C:\Sumo\tools\randomTrips.py -n demo.net.xml -l -e 600 -o demo.trips.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;通过道路文件和trips文件生成路线文件
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  C:\Sumo\bin\duarouter.exe -n demo.net.xml -t demo.trips.xml -o demo.rou.xml --ignore-errors
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;再写一个配置文件支持SUMO GUI使用就可以了，文件名命名为&lt;code class=&quot;highlighter-rouge&quot;&gt;demo.sumocfg&lt;/code&gt;，其内容如下：
    &lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsi:noNamespaceSchemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://sumo.dlr.de/xsd/sumoConfiguration.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;net-file&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;demo.net.xml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;route-files&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;demo.rou.xml&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/input&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;processing&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;time-to-teleport&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/processing&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;report&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;xml-validation&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;never&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;duration-log.disable&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;no-step-log&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/report&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;最后通过SUMO GUI打开配置文件&lt;code class=&quot;highlighter-rouge&quot;&gt;demo.sumocfg&lt;/code&gt;就可以正常加载和运行了&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Renwen Dong</name></author><summary type="html">“Simulation of Urban MObility”, or “SUMO” for short, is an open source, microscopic, multi-modal traffic simulation.</summary></entry><entry><title type="html">OSM地图导出的方法</title><link href="http://localhost:4000/2018/04/02/import-OSM/" rel="alternate" type="text/html" title="OSM地图导出的方法" /><published>2018-04-02T00:00:00+08:00</published><updated>2018-04-02T00:00:00+08:00</updated><id>http://localhost:4000/2018/04/02/import-OSM</id><content type="html" xml:base="http://localhost:4000/2018/04/02/import-OSM/">&lt;p&gt;&lt;em&gt;OpenStreetMap 是一个由地图制作爱好者组成的社区。这些爱好者提供并维护世界各地关于道路、小道、咖啡馆、铁路车站等各种各样的数据。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;导出OSM地图的方法：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;使用官网进行导出
    &lt;ol&gt;
      &lt;li&gt;打开地图官网&lt;a href=&quot;https://www.openstreetmap.org&quot;&gt;https://www.openstreetmap.org&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;注册并登陆&lt;/li&gt;
      &lt;li&gt;点击左上角的导出&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Renwen Dong</name></author><summary type="html">OpenStreetMap 是一个由地图制作爱好者组成的社区。这些爱好者提供并维护世界各地关于道路、小道、咖啡馆、铁路车站等各种各样的数据。</summary></entry><entry><title type="html">通过注册表读取Matlab列表并判断可执行文件是否存在的Demo</title><link href="http://localhost:4000/2017/12/05/get-regedit-demo/" rel="alternate" type="text/html" title="通过注册表读取Matlab列表并判断可执行文件是否存在的Demo" /><published>2017-12-05T00:00:00+08:00</published><updated>2017-12-05T00:00:00+08:00</updated><id>http://localhost:4000/2017/12/05/get-regedit-demo</id><content type="html" xml:base="http://localhost:4000/2017/12/05/get-regedit-demo/">&lt;p&gt;一段通过注册表读取Matlab列表并判断可执行文件是否存在的Demo&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &quot;Windows.h&quot;
#include &amp;lt;string&amp;gt;

LPCTSTR matlab_path_array[] = {
	TEXT(&quot;Matlab.Application.Single.7.10\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.7.11\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.7.12\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.7.13\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.7.14\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.8.0\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.8.1\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.8.2\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.8.3\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.8.4\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.8.5\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.8.6\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.9.0\\CLSID&quot;),
	TEXT(&quot;Matlab.Application.Single.9.1\\CLSID&quot;)
};

std::string matlab_names[] = {
	&quot;Matlab R2010a&quot;,
	&quot;Matlab R2010b&quot;,
	&quot;Matlab R2011a&quot;,
	&quot;Matlab R2011b&quot;,
	&quot;Matlab R2012a&quot;,
	&quot;Matlab R2012b&quot;,
	&quot;Matlab R2013a&quot;,
	&quot;Matlab R2013b&quot;,
	&quot;Matlab R2014a&quot;,
	&quot;Matlab R2014b&quot;,
	&quot;Matlab R2015a&quot;,
	&quot;Matlab R2015b&quot;,
	&quot;Matlab R2016a&quot;,
	&quot;Matlab R2016b&quot;
};

int get_supported_matlab(char* versions)
{
	char out_versions[1024] = {0};
	bool first = false;
	for (int i = 0; i &amp;lt; 14; i++)
	{
		HKEY hKey = NULL;
		WCHAR wcCLSID[MAX_PATH] = {'\0'};
		DWORD dwSize = sizeof(DWORD);
		DWORD dwType = REG_SZ;
		LONG ret;
		ret = RegOpenKeyEx(HKEY_CLASSES_ROOT, matlab_path_array[i], 0, KEY_READ, &amp;amp;hKey);
		wprintf(L&quot;RegOpenKeyEx returns %d\n%s\n&quot;, ret, matlab_path_array[i]);
		if (ERROR_SUCCESS == ret)
		{
			ret = RegQueryValueEx(hKey, TEXT(&quot;&quot;), 0, &amp;amp;dwType, NULL, &amp;amp;dwSize);
			wprintf(L&quot;RegQueryValueEx returns %d, dwSize=%d\n&quot;, ret, dwSize);

			ret = RegQueryValueEx(hKey, TEXT(&quot;&quot;), 0, &amp;amp;dwType, (LPBYTE)&amp;amp;wcCLSID, &amp;amp;dwSize);
			wprintf(L&quot;RegQueryValueEx returns %d, dwSize=%d\n&quot;, ret, dwSize);
			if (ERROR_SUCCESS == ret)
			{
				wprintf(L&quot;wcCLSID: %s\n&quot;, wcCLSID);
				
				HKEY hKey1 = NULL;
				DWORD dwSize1 = sizeof(DWORD);
				DWORD dwType1 = REG_SZ;
				WCHAR wcClsidPath[MAX_PATH] = {'\0'};
				WCHAR wcClsidValue[MAX_PATH] = {'\0'};
				swprintf_s(wcClsidPath, MAX_PATH, L&quot;SOFTWARE\\Classes\\CLSID\\%s\\LocalServer32&quot;, wcCLSID);

				//ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE, wcClsidPath, 0, KEY_READ, &amp;amp;hKey1);
				//ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE, wcClsidPath, 0, KEY_WOW64_32KEY|KEY_READ, &amp;amp;hKey1);
				ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE, wcClsidPath, 0, KEY_WOW64_64KEY|KEY_READ, &amp;amp;hKey1);
				wprintf(L&quot;RegOpenKeyEx returns %d\n%s\n&quot;, ret, wcClsidPath);
				if (ERROR_SUCCESS == ret)
				{
					ret = RegQueryValueEx(hKey1, TEXT(&quot;&quot;), 0, &amp;amp;dwType1, NULL, &amp;amp;dwSize1);
					wprintf(L&quot;RegQueryValueEx returns %d, dwSize=%d\n&quot;, ret, dwSize1);

					ret = RegQueryValueEx(hKey1, TEXT(&quot;&quot;), 0, &amp;amp;dwType1, (LPBYTE)&amp;amp;wcClsidValue, &amp;amp;dwSize1);
					wprintf(L&quot;RegQueryValueEx returns %d, dwSize=%d\n&quot;, ret, dwSize1);
					if (ERROR_SUCCESS == ret)
					{
						wprintf(L&quot;wcClsidValue: %s\n&quot;, wcClsidValue);
						std::wstring wsExePathTmp(wcClsidValue);
						std::wstring wsExePath = wsExePathTmp.substr(0,wsExePathTmp.rfind(L&quot; /MLAutomation&quot;));
						LPCWSTR exeName = (LPCWSTR)wsExePath.c_str();

						WIN32_FIND_DATA  FindFileData;
						HANDLE hFind;

						hFind = FindFirstFile(exeName, &amp;amp;FindFileData);
						if (hFind != INVALID_HANDLE_VALUE)
						{
							if (first == false)
							{
								sprintf_s(out_versions, 1024, &quot;%s&quot;, matlab_names[i].c_str());
								first = true;
							}
							else
							{
								sprintf_s(out_versions, 1024, &quot;%s/%s&quot;, out_versions, matlab_names[i].c_str());
							}
							wprintf(L&quot;The first file found is %s &quot;, FindFileData.cFileName);
							FindClose(hFind);
						}
					}
					RegCloseKey(hKey1);
				}
			}
			RegCloseKey(hKey);
		}
	}
    memcpy(versions, out_versions, strlen(out_versions)+1);
	return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;本段代码使用的是Windows的API&lt;/strong&gt;&lt;/p&gt;</content><author><name>Renwen Dong</name></author><summary type="html">一段通过注册表读取Matlab列表并判断可执行文件是否存在的Demo</summary></entry><entry><title type="html">wchar_t to string, string to wstring</title><link href="http://localhost:4000/2017/12/05/dword-to-wstring/" rel="alternate" type="text/html" title="wchar_t to string, string to wstring" /><published>2017-12-05T00:00:00+08:00</published><updated>2017-12-05T00:00:00+08:00</updated><id>http://localhost:4000/2017/12/05/dword-to-wstring</id><content type="html" xml:base="http://localhost:4000/2017/12/05/dword-to-wstring/">&lt;p&gt;wchar_t to string&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &quot;Windows.h&quot;
#include &amp;lt;string&amp;gt;
void Wchar_tToString(std::string&amp;amp; szDst, wchar_t *wchar)
{
	wchar_t * wText = wchar;
	DWORD dwNum = WideCharToMultiByte(CP_OEMCP,NULL,wText,-1,NULL,0,NULL,FALSE);// WideCharToMultiByte的运用
	char *psText; // psText为char*的临时数组，作为赋值给std::string的中间变量
	psText = new char[dwNum];
	WideCharToMultiByte (CP_OEMCP,NULL,wText,-1,psText,dwNum,NULL,FALSE);// WideCharToMultiByte的再次运用
	szDst = psText;// std::string赋值
	delete []psText;// psText的清除
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;string to wstring&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-C++&quot;&gt;#include &amp;lt;iostream&amp;gt;
#include &quot;Windows.h&quot;
#include &amp;lt;string&amp;gt;
void StringToWstring(std::wstring&amp;amp; szDst, std::string str)
{
	std::string temp = str;
	int len=MultiByteToWideChar(CP_ACP, 0, (LPCSTR)temp.c_str(), -1, NULL,0); 
	wchar_t * wszUtf8 = new wchar_t[len+1]; 
	memset(wszUtf8, 0, len * 2 + 2); 
	MultiByteToWideChar(CP_ACP, 0, (LPCSTR)temp.c_str(), -1, (LPWSTR)wszUtf8, len);
	szDst = wszUtf8;
	std::wstring r = wszUtf8;
	delete[] wszUtf8;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;本段代码使用的是Windows的API&lt;/strong&gt;&lt;/p&gt;</content><author><name>Renwen Dong</name></author><summary type="html">wchar_t to string</summary></entry><entry><title type="html">Excel通过OFFSET函数取得以当前位置为中心的偏移位置</title><link href="http://localhost:4000/2017/12/01/excel-offset/" rel="alternate" type="text/html" title="Excel通过OFFSET函数取得以当前位置为中心的偏移位置" /><published>2017-12-01T00:00:00+08:00</published><updated>2017-12-01T00:00:00+08:00</updated><id>http://localhost:4000/2017/12/01/excel-offset</id><content type="html" xml:base="http://localhost:4000/2017/12/01/excel-offset/">&lt;p&gt;Excel通过OFFSET函数取得以当前位置为中心的偏移位置&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OFFSET&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;INDIRECT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ADDRESS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ROW&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;,COLUMN&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;, 4&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;, 1, &lt;span class=&quot;nt&quot;&gt;-4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - OFFSET&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;INDIRECT&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ADDRESS&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ROW&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;,COLUMN&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;, 4&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;, 0, &lt;span class=&quot;nt&quot;&gt;-4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;其中在OFFSET函数中使用ADDRESS函数取得当前位置，需要在外面包裹INDIRECT函数。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;测试的Excel版本为2016&lt;/strong&gt;&lt;/p&gt;</content><author><name>Renwen Dong</name></author><summary type="html">Excel通过OFFSET函数取得以当前位置为中心的偏移位置</summary></entry><entry><title type="html">VS2015显示空白格和Tab</title><link href="http://localhost:4000/2017/11/27/vs-show-space/" rel="alternate" type="text/html" title="VS2015显示空白格和Tab" /><published>2017-11-27T00:00:00+08:00</published><updated>2017-11-27T00:00:00+08:00</updated><id>http://localhost:4000/2017/11/27/vs-show-space</id><content type="html" xml:base="http://localhost:4000/2017/11/27/vs-show-space/">&lt;p&gt;执行的快捷键为&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Ctrl+R,Ctrl+W
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;测试的VS版本为2015&lt;/strong&gt;&lt;/p&gt;</content><author><name>Renwen Dong</name></author><summary type="html">执行的快捷键为 Ctrl+R,Ctrl+W</summary></entry></feed>